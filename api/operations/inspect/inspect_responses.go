// SPDX-FileCopyrightText: 2025 openstor contributors
// SPDX-FileCopyrightText: 2015-2025 MinIO, Inc.
// SPDX-License-Identifier: AGPL-3.0-or-later

package inspect

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openstor/console/models"
)

// InspectOKCode is the HTTP code returned for type InspectOK
const InspectOKCode int = 200

/*
InspectOK A successful response.

swagger:response inspectOK
*/
type InspectOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewInspectOK creates InspectOK with default headers values
func NewInspectOK() *InspectOK {

	return &InspectOK{}
}

// WithPayload adds the payload to the inspect o k response
func (o *InspectOK) WithPayload(payload io.ReadCloser) *InspectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the inspect o k response
func (o *InspectOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InspectOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*
InspectDefault Generic error response.

swagger:response inspectDefault
*/
type InspectDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewInspectDefault creates InspectDefault with default headers values
func NewInspectDefault(code int) *InspectDefault {
	if code <= 0 {
		code = 500
	}

	return &InspectDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the inspect default response
func (o *InspectDefault) WithStatusCode(code int) *InspectDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the inspect default response
func (o *InspectDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the inspect default response
func (o *InspectDefault) WithPayload(payload *models.APIError) *InspectDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the inspect default response
func (o *InspectDefault) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InspectDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
