// SPDX-FileCopyrightText: 2025 openstor contributors
// SPDX-FileCopyrightText: 2015-2025 MinIO, Inc.
// SPDX-License-Identifier: AGPL-3.0-or-later

package configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openstor/console/models"
)

// ConfigInfoOKCode is the HTTP code returned for type ConfigInfoOK
const ConfigInfoOKCode int = 200

/*
ConfigInfoOK A successful response.

swagger:response configInfoOK
*/
type ConfigInfoOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Configuration `json:"body,omitempty"`
}

// NewConfigInfoOK creates ConfigInfoOK with default headers values
func NewConfigInfoOK() *ConfigInfoOK {

	return &ConfigInfoOK{}
}

// WithPayload adds the payload to the config info o k response
func (o *ConfigInfoOK) WithPayload(payload []*models.Configuration) *ConfigInfoOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the config info o k response
func (o *ConfigInfoOK) SetPayload(payload []*models.Configuration) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConfigInfoOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Configuration, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*
ConfigInfoDefault Generic error response.

swagger:response configInfoDefault
*/
type ConfigInfoDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewConfigInfoDefault creates ConfigInfoDefault with default headers values
func NewConfigInfoDefault(code int) *ConfigInfoDefault {
	if code <= 0 {
		code = 500
	}

	return &ConfigInfoDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the config info default response
func (o *ConfigInfoDefault) WithStatusCode(code int) *ConfigInfoDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the config info default response
func (o *ConfigInfoDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the config info default response
func (o *ConfigInfoDefault) WithPayload(payload *models.APIError) *ConfigInfoDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the config info default response
func (o *ConfigInfoDefault) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConfigInfoDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
