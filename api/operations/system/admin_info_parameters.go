// SPDX-FileCopyrightText: 2025 openstor contributors
// SPDX-FileCopyrightText: 2015-2025 MinIO, Inc.
// SPDX-License-Identifier: AGPL-3.0-or-later

package system

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewAdminInfoParams creates a new AdminInfoParams object
// with the default values initialized.
func NewAdminInfoParams() AdminInfoParams {

	var (
		// initialize parameters with default values

		defaultOnlyDefault = bool(false)
	)

	return AdminInfoParams{
		DefaultOnly: &defaultOnlyDefault,
	}
}

// AdminInfoParams contains all the bound params for the admin info operation
// typically these are obtained from a http.Request
//
// swagger:parameters AdminInfo
type AdminInfoParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*
	  In: query
	  Default: false
	*/
	DefaultOnly *bool
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewAdminInfoParams() beforehand.
func (o *AdminInfoParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	qs := runtime.Values(r.URL.Query())

	qDefaultOnly, qhkDefaultOnly, _ := qs.GetOK("defaultOnly")
	if err := o.bindDefaultOnly(qDefaultOnly, qhkDefaultOnly, route.Formats); err != nil {
		res = append(res, err)
	}
	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindDefaultOnly binds and validates parameter DefaultOnly from query.
func (o *AdminInfoParams) bindDefaultOnly(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false

	if raw == "" { // empty values pass all other validations
		// Default values have been previously initialized by NewAdminInfoParams()
		return nil
	}

	value, err := swag.ConvertBool(raw)
	if err != nil {
		return errors.InvalidType("defaultOnly", "query", "bool", raw)
	}
	o.DefaultOnly = &value

	return nil
}
