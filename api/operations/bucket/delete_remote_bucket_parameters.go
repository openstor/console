// SPDX-FileCopyrightText: 2025 openstor contributors
// SPDX-FileCopyrightText: 2015-2025 MinIO, Inc.
// SPDX-License-Identifier: AGPL-3.0-or-later

package bucket

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
)

// NewDeleteRemoteBucketParams creates a new DeleteRemoteBucketParams object
//
// There are no default values defined in the spec.
func NewDeleteRemoteBucketParams() DeleteRemoteBucketParams {

	return DeleteRemoteBucketParams{}
}

// DeleteRemoteBucketParams contains all the bound params for the delete remote bucket operation
// typically these are obtained from a http.Request
//
// swagger:parameters DeleteRemoteBucket
type DeleteRemoteBucketParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*
	  Required: true
	  In: path
	*/
	Arn string
	/*
	  Required: true
	  In: path
	*/
	SourceBucketName string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewDeleteRemoteBucketParams() beforehand.
func (o *DeleteRemoteBucketParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	rArn, rhkArn, _ := route.Params.GetOK("arn")
	if err := o.bindArn(rArn, rhkArn, route.Formats); err != nil {
		res = append(res, err)
	}

	rSourceBucketName, rhkSourceBucketName, _ := route.Params.GetOK("source-bucket-name")
	if err := o.bindSourceBucketName(rSourceBucketName, rhkSourceBucketName, route.Formats); err != nil {
		res = append(res, err)
	}
	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindArn binds and validates parameter Arn from path.
func (o *DeleteRemoteBucketParams) bindArn(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route
	o.Arn = raw

	return nil
}

// bindSourceBucketName binds and validates parameter SourceBucketName from path.
func (o *DeleteRemoteBucketParams) bindSourceBucketName(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route
	o.SourceBucketName = raw

	return nil
}
