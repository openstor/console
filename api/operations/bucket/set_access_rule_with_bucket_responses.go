// SPDX-FileCopyrightText: 2025 openstor contributors
// SPDX-FileCopyrightText: 2015-2025 MinIO, Inc.
// SPDX-License-Identifier: AGPL-3.0-or-later

package bucket

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openstor/console/models"
)

// SetAccessRuleWithBucketOKCode is the HTTP code returned for type SetAccessRuleWithBucketOK
const SetAccessRuleWithBucketOKCode int = 200

/*
SetAccessRuleWithBucketOK A successful response.

swagger:response setAccessRuleWithBucketOK
*/
type SetAccessRuleWithBucketOK struct {

	/*
	  In: Body
	*/
	Payload bool `json:"body,omitempty"`
}

// NewSetAccessRuleWithBucketOK creates SetAccessRuleWithBucketOK with default headers values
func NewSetAccessRuleWithBucketOK() *SetAccessRuleWithBucketOK {

	return &SetAccessRuleWithBucketOK{}
}

// WithPayload adds the payload to the set access rule with bucket o k response
func (o *SetAccessRuleWithBucketOK) WithPayload(payload bool) *SetAccessRuleWithBucketOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set access rule with bucket o k response
func (o *SetAccessRuleWithBucketOK) SetPayload(payload bool) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetAccessRuleWithBucketOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*
SetAccessRuleWithBucketDefault Generic error response.

swagger:response setAccessRuleWithBucketDefault
*/
type SetAccessRuleWithBucketDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewSetAccessRuleWithBucketDefault creates SetAccessRuleWithBucketDefault with default headers values
func NewSetAccessRuleWithBucketDefault(code int) *SetAccessRuleWithBucketDefault {
	if code <= 0 {
		code = 500
	}

	return &SetAccessRuleWithBucketDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the set access rule with bucket default response
func (o *SetAccessRuleWithBucketDefault) WithStatusCode(code int) *SetAccessRuleWithBucketDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the set access rule with bucket default response
func (o *SetAccessRuleWithBucketDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the set access rule with bucket default response
func (o *SetAccessRuleWithBucketDefault) WithPayload(payload *models.APIError) *SetAccessRuleWithBucketDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set access rule with bucket default response
func (o *SetAccessRuleWithBucketDefault) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetAccessRuleWithBucketDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
